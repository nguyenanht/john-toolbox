version: "3.8"
services:
  proxy:
    image: "traefik:v2.6.1"
    container_name: traefik-container
    command:
    #- "--log.level=DEBUG"
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entrypoints.websecure.address=:443"
    - "--entrypoints.websecure.http.tls=true"
    - "--entrypoints.web.address=:80"
    - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
    - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    - "--providers.file.filename=/etc/traefik/configfile.toml"
    ports:
    - "80:80"
    - "8080:8080"
    - "443:443"
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "./ssl:/etc/cert:ro"
    - "./ssl/traefik.toml:/etc/traefik/configfile.toml:ro"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.proxy.rule=Host(`proxy.${DOMAIN_NAME_LOCAL}`)"
    - "traefik.http.routers.proxy.entrypoints=websecure"
    - "traefik.http.services.proxy.loadbalancer.server.port=8080"
    - "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=50000000" # Sets the maximum request body to 50Mb
    - "traefik.http.middlewares.limit.buffering.memRequestBodyBytes=100000000" # 100Mb
    - "traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=100000000" # 100Mb
    - "traefik.http.middlewares.limit.buffering.memResponseBodyBytes=100000000" # 100Mb
    networks:
      john_toolbox_network:

        # ------------------------------------------ JUPYTER NOTEBOOK DEV CONTAINER--------------------------------------------------------
  john_dev:
    ports:
      - "${NOTEBOOK_PORT}:${NOTEBOOK_PORT}"
    container_name: notebook-container
    working_dir: /work
    build:
      context: .
      dockerfile: Dockerfile_${DEVICE}
      args:
        CUDA_TAG_IMAGE: ${CUDA_TAG_IMAGE}
        POETRY_VERSION: ${POETRY_VERSION}
        PYTHON_VERSION: ${PYTHON_VERSION}
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    runtime: ${DOCKER_RUNTIME}
    command: poetry run jupyter notebook --port=${NOTEBOOK_PORT} --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token=''
    # command: poetry run jupyter lab --port=${NOTEBOOK_PORT} --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token='' --notebook-dir .
    volumes:
      - .:/work
      - .vscode-server:/root/.vscode-server
    # https://github.com/ultralytics/yolov3/issues/283 for GPU support
    ipc: host
    environment:
      ENV_LOGGER: "DEV"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PRE_COMMIT_HOME: "/work/.cache"
    user: "${USER_ID}:${GROUP_ID}"
    networks:
      john_toolbox_network:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.john_dev.rule=Host(`nb.${DOMAIN_NAME_LOCAL}`)"
      - "traefik.http.routers.john_dev.entrypoints=websecure"
      - "traefik.http.services.john_dev.loadbalancer.server.port=${NOTEBOOK_PORT}"
  # ------------------------------------------ DATABASE CONTAINER --------------------------------------------------------
  postgres_john:
    container_name: postgres-john
    image: postgres:14.4 # https://hub.docker.com/_/postgres
    restart: always
    command: -p ${POSTGRES_PORT}
    environment:
      # This optional variable can be used to define another location -
      # like a subdirectory - for the database files.
      - PGDATA=/var/lib/postgresql/data
      # This optional environment variable is used in conjunction with POSTGRES_PASSWORD
      # to set a user and its password. This variable will create the specified user with superuser
      # power and a database with the same name. If it is not specified, then the default user of
      # postgres will be used.
      - POSTGRES_USER=${POSTGRES_USER}
      # This environment variable is required for you to use the PostgreSQL image.
      # It must not be empty or undefined. This environment variable sets the superuser
      # password for PostgreSQL. The default superuser is defined by the POSTGRES_USER environment variable.
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    #      - POSTGRES_INITDB_ARGS="--debug"
    volumes:
      - ./data/postgresdb:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}"
      - "5433"
    networks:
      john_toolbox_network: # ------------------------------------------ PGADMIN CONTAINER --------------------------------------------------------
  pgadmin_john:
    container_name: pgadmin-john
    image: dpage/pgadmin4:6.12
    depends_on:
      - postgres_john
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=${PGADMIN_PORT}
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_PORT}"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./data/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      john_toolbox_network:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin_john.rule=Host(`pgadmin.${DOMAIN_NAME_LOCAL}`)"
      - "traefik.http.routers.pgadmin_john.entrypoints=websecure"
      - "traefik.http.services.pgadmin_john.loadbalancer.server.port=${PGADMIN_PORT}"
volumes:
  pgadmin:


networks:
  john_toolbox_network:
