# Define the necessary arguments
ARG PYTHON_VERSION
ARG CUDA_TAG_IMAGE

# Step 1: Retrieve Python from an existing image
FROM python:${PYTHON_VERSION} as python-base

# Step 2: Build the final image
FROM nvidia/cuda:${CUDA_TAG_IMAGE}

# Copy Python from Step 1
COPY --from=python-base /usr/local /usr/local

# Install additional dependencies and configure the environment as needed
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install  -y \
    curl \
    make \
    nodejs \
    npm \
    git \
    libopenblas-base \
    && rm -rf /var/lib/apt/lists/*

# Redefine the arguments that need to be retained
ARG PYTHON_VERSION
ARG DQ_LIB_VERSION
ARG POETRY_VERSION

# Set environment variables
ENV SHELL /bin/bash
ENV HOME /work
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV POETRY_VERSION=$POETRY_VERSION
ENV POETRY_CACHE $HOME/.cache/poetry
ENV POETRY_HOME /opt/.poetry
ENV PIP_CACHE_DIR $HOME/.cache/pip
ENV PATH $POETRY_HOME/bin:$PATH
ENV JUPYTER_RUNTIME_DIR /work/.cache/jupyter/runtime


# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Set the working directory
WORKDIR $HOME


RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install  -y cuda-cupti-12-1 \
    libgomp1 \
    python3-tk \
    g++ \
    gcc \
    graphviz \
    bash-completion

ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:${LD_LIBRARY_PATH}
