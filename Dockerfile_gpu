FROM nvidia/cuda:11.2.0-cudnn8-runtime-ubuntu20.04
# Avoid configuring timezone data
ENV DEBIAN_FRONTEND noninteractive

# https://phoenixnap.com/kb/how-to-install-python-3-ubuntu
RUN apt update \
    && apt install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    bash-completion \
    zlib1g-dev \
    libncurses5-dev \
    libgdbm-dev \
    libnss3-dev \
    libssl-dev \
    libreadline-dev \
    libbz2-dev \
    libc6-dev \
    libexpat1-dev \
    libffi-dev \
    liblzma-dev \
    libncursesw5-dev \
    libsqlite3-dev \
    wget \
    curl \
    git \
    libgomp1 \
    libopenblas-dev \
    python3-venv \
    python3-tk \
    python-is-python3 \
    && apt-get autoremove -y \
    && apt-get autoclean \
    && apt-get clean

# Python
ARG PYTHON_VERSION=3.8.10
RUN cd /tmp \
    && wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
    && tar -xf Python-$PYTHON_VERSION.tgz \
    && cd Python-$PYTHON_VERSION \
    && ./configure --enable-optimizations \
    && make install \
    && alias pip=pip3 >> ~/.bashrc \
    && alias python=python3 >> ~/.bashrc

# Poetry
ENV POETRY_VERSION="1.2.0b2"
ENV POETRY_CACHE /work/.cache/poetry
ENV POETRY_HOME /usr/local/
ENV POETRY_VIRTUALENVS_PATH=$POETRY_CACHE

RUN curl -sSL https://install.python-poetry.org | python -

ENV SHELL /bin/bash
ENV PIP_CACHE_DIR /work/.cache/pip
ENV JUPYTER_RUNTIME_DIR /work/.cache/jupyter/runtime
ENV JUPYTER_CONFIG_DIR /work/.cache/jupyter/config

CMD ["bash", "-l"]