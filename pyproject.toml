[tool.poetry]
name = "john_toolbox"
version = "0.5.1"
description = "Toolbox for scikit learn pipeline and wrapper for AI models."
authors = ["john <nonosnguyen@gmail.com>"]
# New attributes
license = "MIT"
readme = "README.md"
homepage = "https://github.com/nguyenanht/john-toolbox"
repository = "https://github.com/nguyenanht/john-toolbox"
keywords = ["sklearn", "pipeline", "pytorch"]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
pandas = "^1.1"
tqdm = "^4.51"
Jinja2 = "^2.11.0,<3.0.0"
MarkupSafe = "2.0.1"
ipywidgets = "7.6.5"

[tool.poetry.group.dev.dependencies]
pytest = "^3.0"
jupyterlab = "^3.4.2"
jupyter = "^1.0.0"
jupytext = "^1.11.1"
jupyter-contrib-nbextensions = "^0.5.1"
sphinx-rtd-theme = "^0.5.1"
recommonmark = "^0.7.1"
autopep8 = "^1.5.6"
Sphinx = "^3.5.3"
coverage = "^5.5"
beautifulsoup4 = "^4.9"
xgboost = "^1.3"
matplotlib = "^3.1.1"
boto3 = "^1.16"
seaborn = "^0.11.1"
catboost = "^1.0.3"
scikit-learn = "^1.1.0"
jupyterthemes = "^0.20.0"
flake8 = "^4.0.1"
black = "^22.3.0"
pre-commit = "^2.19.0"
torch = "^1.13.0"
plotly = "^5.14.0"
lightgbm = "^3.3.5"
optuna = "3.0"
ruff = "^0.1.14"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry-version-plugin]
source = "init" # https://github.com/tiangolo/poetry-version-plugin

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:"]


[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 100

known_typing = [
    "typing",
    "types",
    "typing_extensions",
    "mypy",
    "mypy_extensions",
]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.black]
# https://github.com/psf/black
target-version = ['py39']
line-length = 100
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.9
target-version = "py39"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = ["E501", "I001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
