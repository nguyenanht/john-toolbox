# Name of workflow
name: "CI pytest"

# Define trigger
on: push

# Cancel the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job
  build-and-deploy:
    runs-on: ubuntu-latest
    # define task
    steps:
      # 1. get content
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      # 2. cache poetry dependencies
      - name: Cache Poetry dependencies and .cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .cache
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      # 3. run pytest
      - name: "Run env"
        run: |
          make env
      # 4. run pytest
      - name: "Run pytest"
        run: |
          make ci-pytest
      # 5. run generate docs
      - name: "Test generate docs"
        run: |
          make docs
      # 6. run linter
      - name: "Linter"
        run: |
          make lint || exit 1
      # 7. run Commit linter
      - name: "Commit linter"
        uses: wagoid/commitlint-github-action@v4 # https://github.com/wagoid/commitlint-github-action

